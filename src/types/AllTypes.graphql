### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Answer {
  answer: String
  id: String
  question: Question!
}

type AuthPayload {
  token: String
  user: User
}

type Category {
  categoryDescription: String!
  categoryName: String!
  id: String!
  user: User!
}

type Mutation {
  createAnswer(answer: String!, question: String!): Answer!
  createCategory(categoryDescription: String!, categoryName: String!): Category
  createQuestion(category: String!, question: String!): Question!
  deleteAnswer(id: String!): Answer!
  deleteCategory(id: String!): Category
  deleteQuestion(id: String!): Question!
  login(email: String!, password: String!): AuthPayload
  signup(email: String!, firstName: String!, lastName: String!, password: String!, role: String!, userName: String!): AuthPayload
  updateAnswer(answer: String!, id: String!): Answer!
  updateCategory(categoryDescription: String!, categoryName: String!, id: String!): Category
  updateQuestion(category: String!, id: String!, question: String!): Question!
}

type Query {
  AllAnswerByQuestion(questionId: String!, skip: Int = 0, take: Int = 10): [Answer!]!
  allAnswer(skip: Int = 0, take: Int = 10): [Answer!]!
  allCategories: [Category!]!
  allQuestion: [Question!]!
  allUsers: [User!]!
}

type Question {
  category: Category!
  id: String!
  question: String!
}

type User {
  email: String!
  firstName: String!
  id: String!
  lastName: String!
  password: String!
  role: String!
  userName: String!
}